# Docker compose for running from source
services:

  #
  # Worker local storage configuration
  #
  worker:
    image: ${QGIS_IMAGE}
    working_dir: /src/python_modules/qjazz-processes
    command: ${SRCDIR}/tests/run-worker.sh
    volumes:
    - { type: bind, source: "../../../", target: /src }
    - { type: bind, source: "./.local", target: /.local }
    user: "${USER_ID}:${GROUP_ID}"
    environment:
      CONF_WORKER__SERVICE_NAME: "Test"
      CONF_WORKER__BROKER_HOST: rabbitmq
      CONF_WORKER__BACKEND_HOST: redis:6379/0
    depends_on: [rabbitmq, redis]
    profiles:
    - worker
    - web
    - all 
  #
  # Worker S3 configuration
  #
  worker_s3:
    image: ${QGIS_IMAGE}
    working_dir: /src/python_modules/qjazz-processes
    command: ${SRCDIR}/tests/run-worker.sh
    volumes:
    - { type: bind, source: "../../../", target: /src }
    - { type: bind, source: "./.local", target: /.local }
    user: "${USER_ID}:${GROUP_ID}"
    environment:
      CONF_WORKER__SERVICE_NAME: "TestS3"
      CONF_WORKER__BROKER_HOST: rabbitmq
      CONF_WORKER__BACKEND_HOST: redis:6379/0
      CONF_STORAGE__STORAGE_CLASS: qjazz_processes.worker.storages.s3.S3Storage
      CONF_S3_ENDPOINT: "minio:9000"
      CONF_S3_ACCESS_KEY: minioadmin
      CONF_S3_SECRET_KEY: minioadmin
      CONF_S3_BUCKET_NAME: test
      CONF_S3_SECURE: no
    depends_on: [rabbitmq, redis, minio]
    profiles:
    - s3
    - all
  #
  # Print server local storage configuration
  #
  print:
    image: ${QGIS_IMAGE}
    working_dir: /src/python_modules/qjazz-processes
    command: ${SRCDIR}/tests/run-printserver.sh
    volumes:
    - { type: bind, source: "../../../", target: /src }
    - { type: bind, source: "./.local", target: /.local }
    user: "${USER_ID}:${GROUP_ID}"
    environment:
      CONF_WORKER__SERVICE_NAME: "Print"
      CONF_WORKER__BROKER_HOST: rabbitmq
      CONF_WORKER__BACKEND_HOST: redis:6379/0
    depends_on: [rabbitmq, redis]
    profiles:
    - print
    - all 
  web:
    image: ${QGIS_IMAGE}
    command: ${SRCDIR}/tests/run-server.sh
    volumes:
    - { type: bind, source: "../../../", target: /src }
    - { type: bind, source: "./.local", target: /.local }
    user: "${USER_ID}:${GROUP_ID}"
    environment:
      CONF_EXECUTOR__CELERY__BROKER_HOST: rabbitmq
      CONF_EXECUTOR__CELERY__BACKEND_HOST: redis:6379/0
      CONF_SERVER__LISTEN: |
        ["0.0.0.0", 4000]
    depends_on: [rabbitmq, redis, worker]
    profiles: 
    - web
    - all
    expose: [4000]
    ports:
    - 127.0.0.1:${WEB_PORT}:4000 

  rabbitmq:
    image: rabbitmq:3-alpine

  redis:
    image: redis:6-alpine

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
    - 127.0.0.1:9000:9000
    - 127.0.0.1:9001:9001
    profiles:
    - minio
    - s3
    - all

