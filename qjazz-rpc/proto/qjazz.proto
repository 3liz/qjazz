/*
    https://protobuf.dev/programming-guides/proto3/ 
*/
syntax = "proto3";

package qjazz;


service QgisServer {
    rpc Ping (PingRequest) returns (PingReply) {}
    rpc ExecuteOwsRequest (OwsRequest) returns (stream ResponseChunk) {}
    rpc ExecuteApiRequest (ApiRequest) returns (stream ResponseChunk) {}
}

service QgisAdmin {
    rpc Ping (PingRequest) returns (PingReply) {}
    rpc CheckoutProject (CheckoutRequest) returns (CacheInfo) {}
    rpc DropProject (DropRequest) returns (CacheInfo) {}
    rpc ListCache (Empty) returns (stream CacheInfo) {}
    rpc ClearCache (Empty) returns (Empty) {}
    rpc UpdateCache (Empty) returns (Empty) {}
    rpc ListPlugins (Empty) returns (stream PluginInfo) {}
    rpc SetConfig (JsonConfig) returns (Empty) {}
    rpc GetConfig (Empty) returns (JsonConfig) {}
    rpc ReloadConfig (Empty) returns (Empty) {}
    rpc GetProjectInfo (ProjectRequest) returns (ProjectInfo) {}
    rpc Catalog (CatalogRequest) returns (stream CatalogItem) {}
    rpc GetEnv (Empty) returns (JsonConfig) {}
    rpc SetServerServingStatus (ServerStatus) returns (Empty) {}
    rpc Stats (Empty) returns (StatsReply) {}
    rpc Sleep (SleepRequest) returns (Empty) {}
}


message PingRequest {
    string echo = 1;
}


message PingReply {
    string echo = 1;
}


message Empty {}


message SleepRequest {
    int64 delay = 1;
}


enum ServingStatus {
    SERVING = 0;
    NOT_SERVING = 1;
}

message StatsReply {
    uint64 num_workers = 1;
    uint64 dead_workers = 2;
    double activity = 3;
    double failure_pressure = 4;
    double request_pressure = 5;
    uint64 uptime = 6;
}

message ServerStatus {
    ServingStatus status = 1;
}


message ResponseChunk {
    bytes chunk = 1;
}

message OwsRequest {
    string service = 1;
    string request = 2;
    string target = 3;
    optional string version = 4;
    optional string url = 5;
    optional bool direct = 6;
    optional string options = 7;
    optional string request_id = 8;
}

message ApiRequest {
    string name = 1;
    string path = 2;
    string method = 3;
    optional bytes data = 4;
    optional bool delegate = 5;
    optional string target = 6;
    optional string url = 7;
    optional bool direct = 8;
    optional string options = 9;
    optional string request_id = 10;
}


message CheckoutRequest {
    string uri = 1;
    optional bool pull = 2;
}

message CacheInfo {
    string uri = 1;
    int64 status = 2;
    bool in_cache = 3;
    optional int64 timestamp = 4;
    optional string name = 5;
    optional string storage = 6;
    optional string last_modified = 7;
    optional string saved_version = 8;
    map<string,int64> debug_metadata = 9;
    string cache_id = 10;
    int64 last_hit = 11;
    int64 hits = 12;
    bool pinned = 13;
}

message DropRequest {
    string uri = 1;
}

message ProjectRequest {        
    string uri = 1;
}

message ProjectInfo {
    message Layer {
        string layer_id = 1;
        string name = 2;
        string source = 3;
        string crs = 4;
        bool is_valid = 5;
        bool is_spatial = 6;
    } 
    int64 status = 1;
    string uri = 2;
    string filename = 3;
    string crs = 4;
    string last_modified = 5;
    string storage = 6;
    bool has_bad_layers = 7;
    repeated Layer layers = 8;
    string cache_id = 9;
}

message PluginInfo {
    string name = 1;
    string path = 2;
    string plugin_type = 3;
    string metadata = 4;
}

message JsonConfig {
    string json = 1;
}

message CatalogRequest {
    optional string location = 1;
}

message CatalogItem {
    string uri = 1;
    string name = 2;
    string storage = 3;
    string last_modified = 4;
    string public_uri = 5;
}
