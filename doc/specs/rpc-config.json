{"$defs": {"ConfigUrl": {"additionalProperties": false, "description": "Bootstrap configuration from remote location.\nThe configuration is fetched from the remote url\nat startup and override all local settings.", "properties": {"ssl": {"$ref": "#/$defs/SSLConfig", "default": {"cafile": null, "certfile": null, "keyfile": null}}, "url": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, {"type": "null"}], "default": null, "description": "Url to external configuration.\nThe server will issue a GET method against this url at startup.\nThe method should returns a valid configuration fragment.", "title": "External configuration Url"}}, "title": "ConfigUrl", "type": "object"}, "HandlerConfig": {"additionalProperties": false, "properties": {"handler": {"title": "Handler", "type": "string"}, "config": {"default": {}, "title": "Config", "type": "object"}}, "required": ["handler"], "title": "HandlerConfig", "type": "object"}, "ListenConfig": {"additionalProperties": false, "properties": {"listen": {"anyOf": [{"type": "string"}, {"maxItems": 2, "minItems": 2, "prefixItems": [{"type": "string"}, {"type": "integer"}], "type": "array"}], "default": ["[::]", 23456], "title": "TCP:PORT interface or unix socket"}, "use_ssl": {"default": false, "title": "Use Ssl", "type": "boolean"}, "ssl": {"$ref": "#/$defs/SSLConfig", "default": {"cafile": null, "certfile": null, "keyfile": null}}}, "title": "ListenConfig", "type": "object"}, "LoggingConfig": {"additionalProperties": false, "properties": {"level": {"default": "INFO", "enum": ["NOTSET", "TRACE", "DEBUG", "INFO", "REQ", "RREQ", "WARNING", "ERROR", "CRITICAL"], "title": "Level", "type": "str"}}, "title": "LoggingConfig", "type": "object"}, "ProjectsConfig": {"additionalProperties": false, "properties": {"trust_layer_metadata": {"default": false, "description": "Trust layer metadata.\nImproves layer load time by skipping expensive checks\nlike primary key unicity, geometry type and\nsrid and by using estimated metadata on layer load.\nSince QGIS 3.16", "title": "Trust layer metadata", "type": "boolean"}, "disable_getprint": {"default": false, "description": "Don't load print layouts.\nImproves project read time if layouts are not required,\nand allows projects to be safely read in background threads\n(since print layouts are not thread safe).", "title": "Disable GetPrint requests", "type": "boolean"}, "force_readonly_layers": {"default": true, "description": "Force layers to open in read only mode", "title": "Force read only mode", "type": "boolean"}, "ignore_bad_layers": {"default": false, "description": "Allow projects to be loaded with event if it contains\nlayers that cannot be loaded\nNote that the 'dont_resolve_layers flag' trigger automatically\nthis option.", "title": "Ignore bad layers", "type": "boolean"}, "disable_advertised_urls": {"default": false, "description": "Disable ows urls defined in projects.\nThis may be necessary because Qgis projects\nurls override proxy urls.", "title": "Disable OWS advertised urls", "type": "boolean"}, "search_paths": {"additionalProperties": {"type": "str"}, "default": {}, "description": "Defines mapping betweeen location base path and storage handler root url.\nResource path relative to location will be joined the the root url path.\nIn the case of Qgis storage, the handler is responsible for transforming\nthe result url into a comprehensive format for the corresponding\nQgsProjectStorage implementation.\nThis is handled by the default storage implementation for Qgis native\nproject storage. In case of custom QgsProjectStorage, if the scheme does not allow passing\nproject as path component, it is possible to specify a custom resolver function.", "title": "Scheme mapping definitions", "type": "object"}, "allow_direct_path_resolution": {"default": true, "description": "Allow direct path resolution if there is\nno matching from the search paths.\nUri are directly interpreted as valid Qgis project's path.\nWARNING: allowing this may be a security vulnerabilty.", "title": "Allow direct path resolution", "type": "boolean"}, "handlers": {"additionalProperties": {"$ref": "#/$defs/HandlerConfig"}, "default": {}, "description": "Configure storage handlers.\nThe name will be used as scheme for project's search path\nconfiguration.", "examples": ["\n[projects.search_paths]\n\"/public/location1/\" = \"postgres1://?dbname=mydatabase1\"\n\"/public/location2/\" = \"postgres1://?dbname=mydatabase2\"\n\n[projects.handlers.postgres1]\nhandler_class = py_qgis_cache.handlers.postgresql.PostgresHandler\n\n[projects.handlers.postgres1.config]\nuri = \"postgresql://user@host/?schema=myschema\"\n"], "title": "Project storage Handler configurations", "type": "object"}}, "title": "ProjectsConfig", "type": "object"}, "QgisConfig": {"additionalProperties": false, "properties": {"projects": {"$ref": "#/$defs/ProjectsConfig", "default": {"trust_layer_metadata": false, "disable_getprint": false, "force_readonly_layers": true, "ignore_bad_layers": false, "disable_advertised_urls": false, "search_paths": {}, "allow_direct_path_resolution": true, "handlers": {}}, "description": "Projects and cache configuration", "title": "Projects configuration"}, "max_projects": {"default": 50, "description": "The maximum number of projects allowed in cache.\nThe default value is set to 50 projects. ", "title": "Max number of projects in cache", "type": "integer"}, "load_project_on_request": {"default": true, "description": "Load project in cache at request.\nIf set to 'false', project not loaded in cache will\nreturn a 403 HTTP code when requested.\nThus, adding project's to cache will require a specific\naction from another service or admininstrative\nmanagement tools.", "title": "Load project in cache when requested", "type": "boolean"}, "reload_outdated_project_on_request": {"default": false, "description": "Reload outdated project at request.\nIf set to 'false', outdated project in cache will\nnot be refreshed when requested.\nThus, refreshing project's to cache will require a specific\naction from another service or admininstrative\nmanagement tools.", "title": "Reload outdated project when requested", "type": "boolean"}, "plugins": {"$ref": "#/$defs/QgisPluginConfig", "default": {"paths": ["/home/david/.qgis-server/plugins"], "install": null, "install_mode": "external", "enable_scripts": true, "extra_builtin_providers": [], "plugin_manager": "/usr/local/bin/qgis-plugin-manager"}, "title": "Plugins configuration"}, "max_chunk_size": {"default": 1048576, "description": "Set the maximum chunk size for streamed responses.", "title": "Maximum chunk size", "type": "integer"}, "qgis_settings": {"additionalProperties": {"type": "string"}, "default": {}, "description": "Qgis settings override.\nUse the syntax '<section>/<path>' for keys.\nNot that values defined here will override those\nfrom QGIS3.ini file.", "title": "Qgis settings", "type": "object"}, "ignore_interrupt_signal": {"default": true, "description": "Ignore INT signal in workers.\nThis is useful when you don't want\npropagating signal from parent process.", "title": "Ignore INT signal in worker", "type": "boolean"}}, "title": "QgisConfig", "type": "object"}, "QgisPluginConfig": {"additionalProperties": false, "properties": {"paths": {"default": [], "description": "The list of search paths for plugins.\nQgis plugins found will be loaded according to\nthe 'install' list.\nIf the list is empty, the 'QGIS_PLUGINPATH'\nvariable will be checked.", "items": {"format": "path", "type": "string"}, "title": "Plugin paths", "type": "array"}, "install": {"anyOf": [{"items": {"type": "string"}, "type": "array", "uniqueItems": true}, {"type": "null"}], "default": null, "description": "The list of installable plugins.\nNote: if the plugin directory contains other plugins\nplugins not in the list will NOT be loaded !\nThe Plugins will be installed at startup\nif the 'install_mode' is set to 'auto'.\nNote that an empty list means what it is:\ni.e, *no* installed plugins.", "title": "Installable plugins"}, "install_mode": {"default": "external", "description": "If set to 'auto', plugins installation\nwill be checked at startup. Otherwise,\nInstallation will be done from already available\nplugins.", "enum": ["auto", "external"], "title": "Plugin installation mode", "type": "string"}, "enable_scripts": {"default": true, "description": "Enable publication of processing scripts", "title": "Enable processing scripts", "type": "boolean"}, "extra_builtin_providers": {"default": [], "description": "Load extra builtin processing providers\nsuch as 'grass' and 'otb'.", "items": {"enum": ["grass", "otb"], "type": "string"}, "title": "Extra builtins providers", "type": "array", "uniqueItems": true}, "plugin_manager": {"default": "/usr/local/bin/qgis-plugin-manager", "description": "The absolute path to the qgis-plugin_manager executable\nthat will be used for installing plugin in automatic mode.", "format": "path", "title": "Path to plugin manager executable", "type": "string"}}, "title": "QgisPluginConfig", "type": "object"}, "SSLConfig": {"additionalProperties": false, "properties": {"cafile": {"anyOf": [{"format": "file-path", "type": "string"}, {"type": "null"}], "default": null, "title": "CA file"}, "certfile": {"anyOf": [{"format": "file-path", "type": "string"}, {"type": "null"}], "default": null, "description": "Path to the SSL key file", "title": "SSL/TLS  key"}, "keyfile": {"anyOf": [{"format": "file-path", "type": "string"}, {"type": "null"}], "default": null, "description": "Path to the SSL certificat file", "title": "SSL/TLS Certificat"}}, "title": "SSLConfig", "type": "object"}, "WorkerConfig": {"additionalProperties": false, "properties": {"name": {"default": "default", "title": "Name of the worker instance", "type": "string"}, "description": {"default": "", "description": "Description for administrative purpose", "title": "Description", "type": "string"}, "interfaces": {"default": [{"listen": ["[::]", 23456], "use_ssl": false, "ssl": {"cafile": null, "certfile": null, "keyfile": null}}], "items": {"$ref": "#/$defs/ListenConfig"}, "minItems": 1, "title": "Interfaces to listen to", "type": "array"}, "max_waiting_requests": {"default": 20, "description": "The maximum number of requests that can be\nqueued for this worker task. If the number of\nwaiting requests reach the limit, the subsequent\nrequests will be returned with a `service unavailable`\nerror", "title": "Max number of concurrent requests", "type": "integer"}, "process_timeout": {"default": 20, "description": "Set the amount of time in seconds before considering\nconsidering that a process is stalled.\nA stalled process will be terminated and the server will\nexit with an error code", "title": "Stalled process timeout", "type": "integer"}, "process_grace_period": {"default": 3, "description": "The grace period to apply on worker timeout\nwhen attempting to cancel the actual request", "title": "Process grace period", "type": "integer"}, "shutdown_grace_period": {"default": 20, "description": "The maximum amount of time to wait before\nclosing connections. During this period,\nno new connections are allowed.", "title": "Shutdown grace period", "type": "integer"}, "max_processes_failure_pressure": {"default": 0.0, "description": "The maximum ratio of terminated/initial processes\nallowed. If this limit is reached,  the server will\nissue a critical failure before exiting.", "title": "Max allowed processes failure ratio", "type": "number"}, "num_processes": {"default": 1, "description": "Set the number of Qgis processes per worker.\nIf a processes crash, the worker is in a degraded\nstate. When the last process exit the worker will\nstop with an error code.\n\nIn order not to let the worker degrade itself slowly\nthe number of worker should be kept low (from 1 to 3)\nor keep a relatively low 'max_processes_failure_pressure'.\nNote: server must be restarted if this option is modified.", "title": "Number of Qgis processes", "type": "integer"}, "rescale_period": {"default": 5, "description": "Set the interval in seconds between rescaling of the number of\nlive processes.\nScaling will adjust the number of processes according \nto the configuration and dead processes will be replaced\nwith new processes.", "minimum": 0, "title": "Rescale period", "type": "integer"}, "config": {"$ref": "#/$defs/QgisConfig", "default": {"projects": {"allow_direct_path_resolution": true, "disable_advertised_urls": false, "disable_getprint": false, "force_readonly_layers": true, "handlers": {}, "ignore_bad_layers": false, "search_paths": {}, "trust_layer_metadata": false}, "max_projects": 50, "load_project_on_request": true, "reload_outdated_project_on_request": false, "plugins": {"enable_scripts": true, "extra_builtin_providers": [], "install": null, "install_mode": "external", "paths": ["/home/david/.qgis-server/plugins"], "plugin_manager": "/usr/local/bin/qgis-plugin-manager"}, "max_chunk_size": 1048576, "qgis_settings": {}, "ignore_interrupt_signal": true}, "title": "Qgis process configuration"}}, "title": "WorkerConfig", "type": "object"}}, "properties": {"logging": {"$ref": "#/$defs/LoggingConfig", "default": {"level": "INFO"}}, "worker": {"$ref": "#/$defs/WorkerConfig", "default": {"name": "default", "description": "", "interfaces": [{"listen": ["[::]", 23456], "ssl": {"cafile": null, "certfile": null, "keyfile": null}, "use_ssl": false}], "max_waiting_requests": 20, "process_timeout": 20, "process_grace_period": 3, "shutdown_grace_period": 20, "max_processes_failure_pressure": 0.0, "num_processes": 1, "rescale_period": 5, "config": {"ignore_interrupt_signal": true, "load_project_on_request": true, "max_chunk_size": 1048576, "max_projects": 50, "plugins": {"enable_scripts": true, "extra_builtin_providers": [], "install": null, "install_mode": "external", "paths": ["/home/david/.qgis-server/plugins"], "plugin_manager": "/usr/local/bin/qgis-plugin-manager"}, "projects": {"allow_direct_path_resolution": true, "disable_advertised_urls": false, "disable_getprint": false, "force_readonly_layers": true, "handlers": {}, "ignore_bad_layers": false, "search_paths": {}, "trust_layer_metadata": false}, "qgis_settings": {}, "reload_outdated_project_on_request": false}}}, "worker_config_url": {"$ref": "#/$defs/ConfigUrl", "default": {"ssl": {"cafile": null, "certfile": null, "keyfile": null}, "url": null}}, "restore_cache": {"$ref": "#/$defs/ConfigUrl", "default": {"ssl": {"cafile": null, "certfile": null, "keyfile": null}, "url": null}}}, "title": "_BaseConfig", "type": "object"}
